---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app profilarr
spec:
  interval: 1h
  driftDetection:
    mode: enabled
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      profilarr:
        annotations:
          reloader.stakater.com/auto: "true"
        # initContainers:
        #   config-init:
        #     image:
        #       repository: busybox
        #       tag: latest
        #     command:
        #       - sh
        #       - -c
        #       - mkdir -p /home/appuser && chown -R 1000:1000 /home/appuser
        containers:
          app:
            image:
              repository: santiagosayshey/profilarr
              tag: beta@sha256:864486f403195b2ae3277335ac46457db587de983c5a1814c93bb384a0d3252c
            env:
              TZ: Europe/Berlin
              LOG_LEVEL: "info"
              PORT: &port 6868
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: false
            #   capabilities: { drop: ["ALL"] }
            #   runAsNonRoot: true
            #   runAsUser: 1000
            #   runAsGroup: 1000
            #   fsGroup: 1000
            #   fsGroupChangePolicy: OnRootMismatch
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 1Gi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: profilarr
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "480p.com"
          cert-manager.io/cluster-issuer: letsencrypt-production

        hosts:
          - host: &host "{{ .Release.Name }}.480p.com"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      config:
        existingClaim: profilarr
      tmp:
        type: emptyDir
