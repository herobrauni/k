---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app decypharr
spec:
  interval: 1h
  driftDetection:
    mode: enabled
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      decypharr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          config-init:
            image:
              repository: busybox
              tag: latest
            command:
              - sh
              - -c
              - cp /tmp/config/config.json /app/config.json && chmod 644 /app/config.json && chown -R 1000:1000 /app
        containers:
          app:
            image:
              repository: cy01/blackhole
              tag: beta@sha256:f3cea98694af176e5870cd7320be6f46df555d1e55d909e0aba2b612a892f7bb
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: OnRootMismatch

            # resources:
            #   requests:
            #     cpu: 100m
            #     memory: 1Gi

          debug:
            image:
              repository: alpine
              tag: latest@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
            command: ["sleep"]
            args: ["infinity"]
            #   securityContext:
            #     runAsNonRoot: false
            resources:
              # requests:
              #   cpu: 100m
              #   memory: 512Mi
              limits:
                memory: 512Mi
          watcher:
            image:
              repository: busybox
              tag: latest
            command:
              - sh
              - -c
              - |
                #!/bin/sh
                set -euo pipefail

                PID_FILE="/tmp/app.pid"
                FIRST_RUN=true

                while true; do
                  # Find the PID of the 'app' container's main process.
                  # This is a bit of a hack, but it should work for most cases.
                  # We're looking for the process that is not ourself and not the 'sleep' process.
                  CURRENT_PID=$(pgrep -f '/bin/decypharr' || true)

                  if [ -z "$CURRENT_PID" ]; then
                    echo "App process not found. Waiting..."
                    sleep 10
                    continue
                  fi

                  if [ "$FIRST_RUN" = "true" ]; then
                    echo "First run. Storing PID $CURRENT_PID"
                    echo "$CURRENT_PID" > "$PID_FILE"
                    FIRST_RUN=false
                  else
                    PREVIOUS_PID=$(cat "$PID_FILE")
                    if [ "$CURRENT_PID" != "$PREVIOUS_PID" ]; then
                      echo "App container restarted. New PID: $CURRENT_PID, Previous PID: $PREVIOUS_PID"
                      # Do something here, for example, touch a file.
                      touch /tmp/restarted
                      echo "$CURRENT_PID" > "$PID_FILE"
                    fi
                  fi

                  sleep 60
                done

    defaultPodOptions:
      shareProcessNamespace: true
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   fsGroup: 1000
      #   fsGroupChangePolicy: OnRootMismatch
      affinity:
        nodeAffinity:
          # Target specific node "hostsailor1"
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - hostsailor1
    service:
      app:
        controller: decypharr
        ports:
          http:
            port: 8282

    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "480p.com"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: network-authentik@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.480p.com"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: 8282
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      app:
        existingClaim: decypharr
        globalMounts:
          - path: /app
      config:
        enabled: true
        type: secret
        name: decypharr-secret
        globalMounts:
          - path: /tmp/config
      symlinks:
        existingClaim: symlinks
        globalMounts:
          - path: /aio/symlinks
      rclone:
        existingClaim: pvc-rclone
        globalMounts:
          - path: /aio/remote/realdebrid
            readOnly: true
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/logs
      warp:
        type: emptyDir
        globalMounts:
          - path: /etc/sing-box/
