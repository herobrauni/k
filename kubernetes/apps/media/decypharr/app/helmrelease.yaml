---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app decypharr
spec:
  interval: 1h
  driftDetection:
    mode: enabled
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      decypharr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: cy01/blackhole
              tag: experimental@sha256:1e9566e0e62b02b4dafadc2dde3bc4329f8da2cc14e8912c7f99cd10f248caec
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 2Gi
          warp:
            image:
              repository: ghcr.io/mon-ius/docker-warp-socks
              tag: latest@sha256:a5ee6de13207175addf24498ae7a095cb4b5183170bdc324afec9d1cdece8814
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 512Mi
          debug:
            image:
              repository: alpine
              tag: latest@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
            command: ["sleep"]
            args: ["infinity"]
            securityContext:
              runasroot: true

            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      # affinity:
      #   nodeAffinity:
      #     # Soft preference - PREFER nodes with "realdebrid" label but can run elsewhere if needed
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #             - key: realdebrid
      #               operator: Exists
    service:
      app:
        controller: decypharr
        ports:
          http:
            port: 8282
      warp:
        controller: decypharr
        ports:
          http:
            port: 9091
    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "480p.com"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: network-authentik@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.480p.com"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: 8282
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      app:
        existingClaim: decypharr
        globalMounts:
          - path: /app
      config:
        enabled: true
        type: secret
        name: decypharr-secret
        globalMounts:
          - path: /app/config.json
            subPath: config.json
      symlinks:
        existingClaim: symlinks
        globalMounts:
          - path: /aio/symlinks
      rclone:
        existingClaim: pvc-rclone
        globalMounts:
          - path: /aio/remote/realdebrid
            readOnly: true
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/logs
