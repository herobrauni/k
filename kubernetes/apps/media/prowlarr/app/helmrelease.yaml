---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  interval: 1h
  driftDetection:
    mode: enabled
  chartRef:
    kind: OCIRepository
    name: prowlarr
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          git:
            image:
              repository: alpine
              tag: latest

            command: ["sleep"]
            args: ["infinity"]
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              runAsNonRoot: false

            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 512Mi

          app:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.1.5.5213@sha256:52b40a9147d4056d8c5edc535adddad32da282df4c3099321378e40dbfcf898a
            env:
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__APP__THEME: dark
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__LOG__DBENABLED: "False"
              PROWLARR__LOG__LEVEL: info
              PROWLARR__SERVER__PORT: &port 80
              PROWLARR__UPDATE__BRANCH: develop
              TZ: Europe/Berlin
            envFrom:
              - secretRef:
                  name: prowlarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: OnRootMismatch

            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
    service:
      app:
        controller: prowlarr
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "480p.com"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: network-authentik@kubernetescrd

        hosts:
          - host: &host "{{ .Release.Name }}.480p.com"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      config:
        existingClaim: prowlarr
      tmp:
        type: emptyDir
