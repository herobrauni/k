---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: kube-vm-stack
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 0.52.0
  url: oci://ghcr.io/victoriametrics/helm-charts/victoria-metrics-k8s-stack
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-vm-stack
spec:
  driftDetection:
    mode: enabled
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kube-vm-stack

  install:
    timeout: 5m
    remediation:
      retries: -1
  upgrade:
    timeout: 5m
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    nameOverride: vmstack

    grafana:
      enabled: false
      forceDeployDashboards: true
    crds:
      enabled: true
    prometheus-operator-crds:
      enabled: true
    victoria-metrics-operator:
      enabled: true
      crd:
        create: true
        cleanup:
          enabled: true
      operator:
        disable_prometheus_converter: false
        enable_converter_ownership: true
    defaultRules:
      create: false
    vmsingle:
      enabled: true
      spec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 20Gi
        retentionPeriod: "14d"
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            memory: 2000Mi
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "480p.com"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: network-authentik@kubernetescrd
        hosts:
          - "victoriametrics.480p.com"
        paths:
          - /
        pathType: Prefix
        tls:
          - secretName: "victoriametrics-tls"
            hosts:
              - "victoriametrics.480p.com"
    alertmanager:
      enabled: true
      spec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi
        externalURL: https://alertmanager.480p.com
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "480p.com"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: network-authentik@kubernetescrd
        hosts:
          - "alertmanager.480p.com"
        paths:
          - /
        pathType: Prefix
        tls:
          - secretName: "alertmanager-tls"
            hosts:
              - "alertmanager.480p.com"
    vmalert:
      enabled: true
      spec:
        datasource:
          url: "http://vmsingle-kube-vm-stack-vmstack:8429"
        notifier:
          url: "http://vmalertmanager-kube-vm-stack-vmstack:9093"
    vmagent:
      enabled: true
      spec:
        remoteWrite:
          - url: "http://vmsingle-kube-vm-stack-vmstack:8429/api/v1/write"
    prometheus-node-exporter:
      enabled: true
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kube-state-metrics:
      enabled: true
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kubelet:
      enabled: true
      cadvisor: true
      probes: true
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
    kubeDns:
      enabled: true
    coreDns:
      enabled: true
    kubeEtcd:
      enabled: true
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
    kubeScheduler:
      enabled: true
    kubeProxy:
      enabled: true
